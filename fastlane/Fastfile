default_platform(:mac)

API_ID = ENV["API_ID"]
API_ISSUER = ENV["API_ISSUER"]
API_KEY = ENV["API_KEY"]
APP_IDENTIFIER = ENV["APP_IDENTIFIER"]
KEYCHAIN_NAME = ENV["KEYCHAIN_NAME"]
KEYCHAIN_PWD = ENV["KEYCHAIN_PWD"]
MATCH_TOKEN = ENV["MATCH_TOKEN"]
NOTARIZE_OBJECT = ENV["NOTARIZE_OBJECT"]

def get_api_key()
  return app_store_connect_api_key(
    key_id: API_ID,
    issuer_id: API_ISSUER,
    key_content: API_KEY,
    duration: 1200,
    in_house: false
  )
end

platform :mac do
  lane :get_cert do
    create_keychain(
      name: KEYCHAIN_NAME,
      password: KEYCHAIN_PWD,
      unlock: false,
      default_keychain: true,
      timeout: 0
    )

    match(
      type: "developer_id",
      app_identifier: "#{APP_IDENTIFIER}",
      git_basic_authorization: Base64.strict_encode64(MATCH_TOKEN),
      readonly: true,
      skip_provisioning_profiles: true,
      keychain_name: KEYCHAIN_NAME,
      keychain_password: KEYCHAIN_PWD,
      api_key: get_api_key()
    )
  end

  lane :make_safe do
    notarize(
      package: NOTARIZE_OBJECT,
      print_log: true,
      api_key: get_api_key()
    )
  end
end
